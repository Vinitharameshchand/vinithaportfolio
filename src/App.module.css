@import "./vars.css";

.App{
  /* Golden Hour background applied via className */
  /* background: var(--bg-animated); */
  /* background-size: 400% 400%; */
  /* animation: gradientShift 15s ease infinite; */
  width: 100%;
  min-height: 100vh;
  position: relative;
}

/* Golden Hour background handles its own overlays and effects */
/*
.App::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: var(--dot-pattern);
  background-size: 20px 20px;
  opacity: 0.4;
  pointer-events: none;
}

.App::after {
  content: '';
  position: absolute;
  top: 10%;
  right: 10%;
  width: 200px;
  height: 200px;
  background: linear-gradient(45deg, rgba(33, 150, 243, 0.1), rgba(100, 181, 246, 0.1));
  border-radius: 50%;
  filter: blur(40px);
  animation: float 6s ease-in-out infinite;
  pointer-events: none;
}
*/

/* Keyframe animations */
@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
  }
  50% {
    transform: translateY(-20px) rotate(10deg);
  }
}

/* Alternative background options - uncomment to use */

/* Option 2: Radial Gradient */
/*
.App {
  background: var(--bg-gradient-2);
  width: 100%;
  min-height: 100vh;
}
*/

/* Option 3: Static Diagonal Gradient */
/*
.App {
  background: var(--bg-gradient-3);
  width: 100%;
  min-height: 100vh;
}
*/

/* Option 4: Grid Pattern Overlay */
/*
.App {
  background-color: var(--color-bg);
  background-image: var(--grid-pattern);
  background-size: 50px 50px;
  width: 100%;
  min-height: 100vh;
}
*/
